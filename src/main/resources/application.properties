server.port=9876
server.server-header="Test-All"
server.connection-timeout=80000
spring.servlet.multipart.max-file-size=400MB
spring.servlet.multipart.max-request-size=400MB




spring.profiles.active=local







# вывод лога Apache HttpClient на томкате
#logging.level.org.apache.http.headers=DEBUG
#logging.level.org.apache.http=DEBUG
#logging.level.httpclient.wire=DEBUG
#logging.level.org.springframework.web.client.RestTemplate=DEBUG






logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=DEBUG
reactor.netty.http.server.AccessLog=INFO








# By default, Spring features a MultipartResolver that we'll need to disable to use Apache Commons Fileupload library.
# Otherwise, it'll read the content of the request before it reaches our Controller.
#spring.servlet.multipart.enabled=true











#ignite.peerClassLoadingEnabled=false
#ignite.clientMode=true
#
##ignite.discoverySpi.ipFinder.addresses[0]=127.0.0.1:47500..47509
##ignite.communicationSpi.localPort=5555
#
#ignite.cacheConfiguration[0].name=accounts
#ignite.cacheConfiguration[0].statisticsEnabled=true
#ignite.cacheConfiguration[1].name=my-cache2

pathToIgniteConfig=ignite_config/ignite-external-config.xml








spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb



test-all.kafka.enabled=true
test-all.kafka.bootstrapServers=localhost:9092
test-all.kafka.producerConfig."[client.id]"=test-producer-33
test-all.kafka.consumerConfig."[group.id]"=test-consumer-group-id-22



logging.pattern.console= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] [%mdc] %logger{15} - %msg%n


spring.sleuth.baggage.remote-fields=X-Request-Id
#spring.sleuth.baggage.local-fields=X-Request-Id
spring.sleuth.baggage.correlation-fields=X-Request-Id
